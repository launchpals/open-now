//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol OpenNow_CoreGetStatusCall: ClientCallUnary {}

fileprivate final class OpenNow_CoreGetStatusCallBase: ClientCallUnaryBase<OpenNow_Empty, OpenNow_Status>, OpenNow_CoreGetStatusCall {
  override class var method: String { return "/open_now.Core/GetStatus" }
}

internal protocol OpenNow_CoreGetPointsOfInterestCall: ClientCallUnary {}

fileprivate final class OpenNow_CoreGetPointsOfInterestCallBase: ClientCallUnaryBase<OpenNow_Position, OpenNow_PointsOfInterest>, OpenNow_CoreGetPointsOfInterestCall {
  override class var method: String { return "/open_now.Core/GetPointsOfInterest" }
}

internal protocol OpenNow_CoreGetTransitStopsCall: ClientCallUnary {}

fileprivate final class OpenNow_CoreGetTransitStopsCallBase: ClientCallUnaryBase<OpenNow_Position, OpenNow_TransitStops>, OpenNow_CoreGetTransitStopsCall {
  override class var method: String { return "/open_now.Core/GetTransitStops" }
}


/// Instantiate OpenNow_CoreServiceClient, then call methods of this protocol to make API calls.
internal protocol OpenNow_CoreService: ServiceClient {
  /// Synchronous. Unary.
  func getStatus(_ request: OpenNow_Empty) throws -> OpenNow_Status
  /// Asynchronous. Unary.
  func getStatus(_ request: OpenNow_Empty, completion: @escaping (OpenNow_Status?, CallResult) -> Void) throws -> OpenNow_CoreGetStatusCall

  /// Synchronous. Unary.
  func getPointsOfInterest(_ request: OpenNow_Position) throws -> OpenNow_PointsOfInterest
  /// Asynchronous. Unary.
  func getPointsOfInterest(_ request: OpenNow_Position, completion: @escaping (OpenNow_PointsOfInterest?, CallResult) -> Void) throws -> OpenNow_CoreGetPointsOfInterestCall

  /// Synchronous. Unary.
  func getTransitStops(_ request: OpenNow_Position) throws -> OpenNow_TransitStops
  /// Asynchronous. Unary.
  func getTransitStops(_ request: OpenNow_Position, completion: @escaping (OpenNow_TransitStops?, CallResult) -> Void) throws -> OpenNow_CoreGetTransitStopsCall

}

internal final class OpenNow_CoreServiceClient: ServiceClientBase, OpenNow_CoreService {
  /// Synchronous. Unary.
  internal func getStatus(_ request: OpenNow_Empty) throws -> OpenNow_Status {
    return try OpenNow_CoreGetStatusCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getStatus(_ request: OpenNow_Empty, completion: @escaping (OpenNow_Status?, CallResult) -> Void) throws -> OpenNow_CoreGetStatusCall {
    return try OpenNow_CoreGetStatusCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getPointsOfInterest(_ request: OpenNow_Position) throws -> OpenNow_PointsOfInterest {
    return try OpenNow_CoreGetPointsOfInterestCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getPointsOfInterest(_ request: OpenNow_Position, completion: @escaping (OpenNow_PointsOfInterest?, CallResult) -> Void) throws -> OpenNow_CoreGetPointsOfInterestCall {
    return try OpenNow_CoreGetPointsOfInterestCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getTransitStops(_ request: OpenNow_Position) throws -> OpenNow_TransitStops {
    return try OpenNow_CoreGetTransitStopsCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getTransitStops(_ request: OpenNow_Position, completion: @escaping (OpenNow_TransitStops?, CallResult) -> Void) throws -> OpenNow_CoreGetTransitStopsCall {
    return try OpenNow_CoreGetTransitStopsCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

